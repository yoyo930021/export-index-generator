name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v1
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.17.1
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Run lint
        run: |
          pnpm install --frozen-lockfile
          pnpm lint
  test:
    name: Test on node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.17.1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Run test
        run: |
          pnpm install --frozen-lockfile
          pnpm test
        env:
          CI: true
  release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && github.event_name == 'push'"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v1
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.17.1
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm install --frozen-lockfile 
          pnpm build
          pnpm semantic-release
